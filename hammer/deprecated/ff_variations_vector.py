'''
All numbers from https://doi.org/10.1103/PhysRevD.100.094503
Use supplementary material: https://journals.aps.org/prd/abstract/10.1103/PhysRevD.100.094503#supplemental
'''

import numpy as np
from matplotlib import pyplot as plt
from scipy.stats import multivariate_normal
from itertools import combinations
from get_ff_variations import get_ff_variations

# don't use numpy matrices
# https://numpy.org/doc/stable/reference/generated/numpy.matrix.html
## scale them to get P1
d_m      = 1.96834
b_m      = 5.36688
rC       =  d_m / b_m 
alpha = np.sqrt(rC) / (1 + rC)

names_bgl_coefficients = [
    'g_a0' ,
    'g_a1' ,
    'g_a2' ,
    'f_a0' ,
    'f_a1' ,
    'f_a2' ,
#   'F1_a0',
    'F1_a1',
    'F1_a2',
    'F2_a0',
    'F2_a1',
#   'F2_a2',
]

names_bgl_coefficients_hammer = [
    'e1',
    'e2',
    'e3',
    'e4',
    'e5',
    'e6',
#   'c0',  <== missing in Hammer
    'e7',
    'e8',
    'e9',
    'e10',
#   'd2',  <== missing in Hammer
]

#name the eigenvectors like: "e0, e1, .., e9"
names_eigenvectors = ['e%d' %i for i in range(len(names_bgl_coefficients_hammer))]

##COHEN
#fill the coefficients according to the paper above
#bgl_coefficients = np.array([
# 0.004605664681641084   , # g  a0 --> Hammer a0
#-0.002140593040599278   , # g  a1 --> Hammer a1
# 0.15566982447466055    , # g  a2 --> Hammer a2
# 0.003303529928953319   , # f  a0 --> Hammer b0
#-0.004284980385058838   , # f  a1 --> Hammer b1
# 0.17791644334552834    , # f  a2 --> Hammer b2
# #0.000500939732384485  , # F1 a0 --> Hammer c0 <=== MISSING IN HAMMER
#-0.0018867020644757423  , # F1 a1 --> Hammer c1
# 0.022525216948547932   , # F1 a2 --> Hammer c2
# 0.03980443778007538    , # F2 a0 --> Hammer d0
#-0.1872442367469107     , # F2 a1 --> Hammer d1
## 0.004653366641100383  , # F2 a2 --> Hammer d2
#]).astype(np.float64)
#
#
#bgl_coefficient_uncertainties = np.array([
# 0.001074224733603991   , # g  a0 --> Hammer a0
# 0.020436404332036355   , # g  a1 --> Hammer a1
# 0.15751856111042434    , # g  a2 --> Hammer a2
# 0.00030889008194163943 , # f  a0 --> Hammer b0
# 0.019749982460876937   , # f  a1 --> Hammer b1
# 0.18234034323164144    , # f  a2 --> Hammer b2
# #0.00005167468489451729 , # F1 a0 --> Hammer c0 <=== MISSING IN HAMMER
# 0.003158525549523684   , # F1 a1 --> Hammer c1
# 0.10378051996527263    , # F1 a2 --> Hammer c2
# 0.008389888682776101   , # F2 a0 --> Hammer d0
# 0.28296856464624665    , # F2 a1 --> Hammer d1
## 0.23536654041924412    , # F2 a2 --> Hammer d2
#]).astype(np.float64)


# HARRSION OLD
##bgl_coefficients = np.array([
##0.01257,   #f
##0.010,     #f 
##-0.32,     #f
##
###0.002094, #F1
##-0.0042,   #F1
##-0.066,    #F1
##
##0.0487,    #F2 
##-0.240,    #F2 
###-0.27,    #F2
##
##0.0280,    #g
##-0.056,    #g
##0.08,      #g
##
##
##])

## HARRISON
##
##bgl_coefficients = np.array([
##0.01256,   #f
##0.012,     #f 
##-0.40,     #f
##
###0.002093, #F1
##-0.0038,   #F1
##-0.090,    #F1
##
##0.0480,    #F2 
##-0.17,     #F2 
###-1.6,     #F2
##
##0.0282,    #g
##-0.072,    #g
##0.5,       #g
##
##
##])
##

# HARRSION NEWEST
bgl_coefficients = np.array([
0.01257,   #f
0.010,     #f 
-0.33,     #f

#0.002094, #F1
-0.0042,   #F1
-0.062,    #F1

alpha* 0.0489,    #F2 
alpha* -0.253,    #F2 
#-0.27,    #F2

0.0280,    #g
-0.056,    #g
0.08,      #g


])

### HARRISON OLD
##bgl_coefficient_uncertainties = np.array([
##
##0.00013,   #f
##0.010,     #f
##0.37,      #f
##
###0.000021, #F1
##0.0032,    #F1
##0.087,     #F1
##
##0.0021,    #F2
##0.088,      #F2
###0.70,      #F2
##
##0.0013,    #g
##0.056,     #g
##0.74,       #g
##
##])
##


##
### HARRISON NEW
##bgl_coefficient_uncertainties = np.array([
##
##0.00013,   #f
##0.011,     #f
##0.42,      #f
##
###0.000021, #F1
##0.0033,    #F1
##0.091,     #F1
##
##0.0023,    #F2
##0.13,      #F2
###1.9,      #F2
##
##0.0014,    #g
##0.081,     #g
##1.9,       #g
##
##])
##

# HARRISON NEWEST
bgl_coefficient_uncertainties = np.array([

0.00013,   #f
0.010,     #f
0.37,      #f

#0.000021, #F1
0.0032,    #F1
0.087,     #F1

alpha* 0.0020,    #F2
alpha* 0.080,      #F2
#1.9,      #F2

0.0013,    #g
0.055,     #g
0.74,      #g

])

## scale them to get P1
d_m      = 1.96834
b_m      = 5.36688
rC       =  d_m / b_m 
alpha = np.sqrt(rC) / (1 + rC)



import numpy as np
## COHEN
# correlation matrix (normalised covariance matrix)

##correlation_complete = np.array([
##    
###     a0        a1        a2        b0        b1        b2        c0        c1        c2        d0        d1        d2
##    [ 1.00000,  0.33659, -0.29501, -0.02177, -0.00252,  0.04887,  0.09463,  0.05693, -0.07992,  0.02260, -0.00535, -0.00158],
##    [ 0.33659,  1.00000,  0.27320,  0.06180,  0.07523,  0.09627, -0.02265,  0.09332,  0.20195,  0.14681,  0.11106, -0.07422],
##    [-0.29501,  0.27320,  1.00000,  0.03314,  0.05118,  0.10339, -0.08024, -0.01450,  0.10580,  0.08645, -0.02625, -0.16763],
##    [-0.02177,  0.06180,  0.03314,  1.00000,  0.98181,  0.00631,  0.23178,  0.21528, -0.11545,  0.21363, -0.02327, -0.08270],
##    [-0.00252,  0.07523,  0.05118,  0.98181,  1.00000,  0.14260,  0.23435,  0.23815, -0.10307,  0.18737,  0.03022, -0.05477],
##    [ 0.04887,  0.09627,  0.10339,  0.00631,  0.14260,  1.00000, -0.15393, -0.14880,  0.03450, -0.10226, -0.05931, -0.04357],
##    [ 0.09463, -0.02265, -0.08024,  0.23178,  0.23435, -0.15393,  1.00000,  0.83136, -0.32258,  0.42373,  0.41520,  0.02785],
##    [ 0.05693,  0.09332, -0.01450,  0.21528,  0.23815, -0.14880,  0.83136,  1.00000,  0.24205,  0.67425,  0.74508,  0.11953],
##    [-0.07992,  0.20195,  0.10580, -0.11545, -0.10307,  0.03450, -0.32258,  0.24205,  1.00000,  0.46548,  0.51003,  0.11613],
##    [ 0.02260,  0.14681,  0.08645,  0.21363,  0.18737, -0.10226,  0.42373,  0.67425,  0.46548,  1.00000,  0.22556, -0.32435],
##    [-0.00535,  0.11106, -0.02625, -0.02327,  0.03022, -0.05931,  0.41520,  0.74508,  0.51003,  0.22556,  1.00000,  0.47691],
##    [-0.00158, -0.07422, -0.16763, -0.08270, -0.05477, -0.04357,  0.02785,  0.11953,  0.11613, -0.32435,  0.47691,  1.00000]
##]).astype(np.float64)
##
##
###Missing in Hammer: c0, d2 
### c0 missing concluded from: https://gitlab.com/mpapucci/Hammer/-/blob/master/src/FormFactors/BGL/FFBtoDstarBGL.cc
### together with the referenced paper: https://arxiv.org/pdf/1902.09553 a
### d2 missing not as clear... took it from: 
### https://github.com/ocerri/BPH_RDntuplizer/blob/a4b157f5a64473bf3db360019d55fa2217199015/plugins/HammerWeightsProducer.cc#L358 
##
##corr  = np.array([
##    
###     a0        a1        a2        b0        b1        b2         c1        c2        d0        d1        
##    [ 1.00000,  0.33659, -0.29501, -0.02177, -0.00252,  0.04887,   0.05693, -0.07992,  0.02260, -0.00535] ,
##    [ 0.33659,  1.00000,  0.27320,  0.06180,  0.07523,  0.09627,   0.09332,  0.20195,  0.14681,  0.11106] ,
##    [-0.29501,  0.27320,  1.00000,  0.03314,  0.05118,  0.10339,  -0.01450,  0.10580,  0.08645, -0.02625] ,
##    [-0.02177,  0.06180,  0.03314,  1.00000,  0.98181,  0.00631,   0.21528, -0.11545,  0.21363, -0.02327] ,
##    [-0.00252,  0.07523,  0.05118,  0.98181,  1.00000,  0.14260,   0.23815, -0.10307,  0.18737,  0.03022] ,
##    [ 0.04887,  0.09627,  0.10339,  0.00631,  0.14260,  1.00000,  -0.14880,  0.03450, -0.10226, -0.05931] ,
##    [ 0.05693,  0.09332, -0.01450,  0.21528,  0.23815, -0.14880,   1.00000,  0.24205,  0.67425,  0.74508] ,
##    [-0.07992,  0.20195,  0.10580, -0.11545, -0.10307,  0.03450,   0.24205,  1.00000,  0.46548,  0.51003] ,
##    [ 0.02260,  0.14681,  0.08645,  0.21363,  0.18737, -0.10226,   0.67425,  0.46548,  1.00000,  0.22556] ,
##    [-0.00535,  0.11106, -0.02625, -0.02327,  0.03022, -0.05931,   0.74508,  0.51003,  0.22556,  1.00000] 
##]).astype(np.float64)


##HARRISON
##      f0              f1                f2               F01               F11               F12               F20              F21                F22              g0                g1               g2
#correlation_complete  = np.array([
#
#       [ 1.00000000e+00, -5.76551750e-02,  3.23528466e-02,  9.99999876e-01,   -7.75644615e-02,   4.61461621e-03,  6.72419232e-02,   5.97744099e-03,   6.39885542e-03,  4.39196426e-02,   1.79375197e-02,  -2.68122912e-03],
#       [-5.76551750e-02,  1.00000000e+00, -5.71758173e-01,  -5.76549952e-02,    7.17943552e-02,   7.54575123e-03, -7.55088481e-02,  8.52188309e-02,   1.08011092e-02,  5.12384876e-04,   1.47007401e-02,  -2.58107940e-03],
#       [ 3.23528466e-02, -5.71758173e-01,  1.00000000e+00,  3.23527431e-02,   -8.92582760e-02,   7.65049978e-02,  -2.84259882e-02,  4.53094945e-02,   -2.50281926e-02, -9.97519373e-03,  2.10835612e-02,  9.27219016e-03],
#       [ 9.99999876e-01, -5.76549952e-02,  3.23527431e-02,  1.00000000e+00,   -7.75645634e-02,   4.61469544e-03,  6.72419070e-02,   5.97746362e-03,   6.39887412e-03,  4.39196445e-02,   1.79375178e-02,  -2.68123050e-03],
#       [-7.75644615e-02,  7.17943552e-02, -8.92582760e-02,  -7.75645634e-02,    1.00000000e+00,  -7.26273438e-01, 5.24784428e-01,   -2.80692790e-01,  -3.26072269e-02, -2.41412628e-03,  3.54770393e-02,  3.94828995e-03],
#       [ 4.61461621e-03,  7.54575123e-03,  7.65049978e-02,  4.61469544e-03,   -7.26273438e-01,   1.00000000e+00,  -3.87110994e-01,  7.03812481e-01,   1.11015497e-01,  -9.79413422e-03,  -2.98184583e-02, -2.23638808e-03],
#       [ 6.72419232e-02, -7.55088481e-02, -2.84259882e-02,  6.72419070e-02,    5.24784428e-01,  -3.87110994e-01,  1.00000000e+00,   -5.36496434e-01,  1.80949085e-01,  -8.76735799e-03,  1.64949118e-03,  8.12030030e-04],
#       [ 5.97744099e-03,  8.52188309e-02,  4.53094945e-02,  5.97746362e-03,   -2.80692790e-01,   7.03812481e-01,  -5.36496434e-01,  1.00000000e+00,   -4.14508214e-01, -1.43222861e-03,  -1.04437158e-02, -2.48586711e-03],
#       [ 6.39885542e-03,  1.08011092e-02, -2.50281926e-02,  6.39887412e-03,   -3.26072269e-02,   1.11015497e-01,  1.80949085e-01,   -4.14508214e-01,  1.00000000e+00,  -8.91224715e-03,  9.88529141e-03,  5.34305796e-03],
#       [ 4.39196426e-02,  5.12384876e-04, -9.97519373e-03,  4.39196445e-02,   -2.41412628e-03,  -9.79413422e-03,  -8.76735799e-03,  -1.43222861e-03,  -8.91224715e-03, 1.00000000e+00,   -4.64001354e-01,  1.73009912e-01],
#       [ 1.79375197e-02,  1.47007401e-02,  2.10835612e-02,  1.79375178e-02,    3.54770393e-02,  -2.98184583e-02,  1.64949118e-03,   -1.04437158e-02,  9.88529141e-03,  -4.64001354e-01,  1.00000000e+00,  -4.38040559e-01],
#       [-2.68122912e-03, -2.58107940e-03,  9.27219016e-03,  -2.68123050e-03,    3.94828995e-03,  -2.23638808e-03, 8.12030030e-04,   -2.48586711e-03,  5.34305796e-03, 1.73009912e-01,    -4.38040559e-01,  1.00000000e+00]
#
#
#])
#
#corr = np.array([
#
####      f0              f1                f2               F11               F12               F20              F21                g0                g1               g2
#       [ 1.00000000e+00, -5.76551750e-02,  3.23528466e-02,   -7.75644615e-02,   4.61461621e-03,  6.72419232e-02,   5.97744099e-03,   4.39196426e-02,   1.79375197e-02,  -2.68122912e-03],
#       [-5.76551750e-02,  1.00000000e+00, -5.71758173e-01,     7.17943552e-02,   7.54575123e-03, -7.55088481e-02,  8.52188309e-02,   5.12384876e-04,   1.47007401e-02,  -2.58107940e-03],
#       [ 3.23528466e-02, -5.71758173e-01,  1.00000000e+00,   -8.92582760e-02,   7.65049978e-02,  -2.84259882e-02,  4.53094945e-02,   -9.97519373e-03,  2.10835612e-02,  9.27219016e-03],
#       [-7.75644615e-02,  7.17943552e-02, -8.92582760e-02,     1.00000000e+00,  -7.26273438e-01, 5.24784428e-01,   -2.80692790e-01,  -2.41412628e-03,  3.54770393e-02,  3.94828995e-03],
#       [ 4.61461621e-03,  7.54575123e-03,  7.65049978e-02,   -7.26273438e-01,   1.00000000e+00,  -3.87110994e-01,  7.03812481e-01,   -9.79413422e-03,  -2.98184583e-02, -2.23638808e-03],
#       [ 6.72419232e-02, -7.55088481e-02, -2.84259882e-02,    5.24784428e-01,  -3.87110994e-01,  1.00000000e+00,   -5.36496434e-01,  -8.76735799e-03,  1.64949118e-03,  8.12030030e-04],
#       [ 5.97744099e-03,  8.52188309e-02,  4.53094945e-02,   -2.80692790e-01,   7.03812481e-01,  -5.36496434e-01,  1.00000000e+00,   -1.43222861e-03,  -1.04437158e-02, -2.48586711e-03],
#       [ 4.39196426e-02,  5.12384876e-04, -9.97519373e-03,   -2.41412628e-03,  -9.79413422e-03,  -8.76735799e-03,  -1.43222861e-03,  1.00000000e+00,   -4.64001354e-01,  1.73009912e-01],
#       [ 1.79375197e-02,  1.47007401e-02,  2.10835612e-02,    3.54770393e-02,  -2.98184583e-02,  1.64949118e-03,   -1.04437158e-02,  -4.64001354e-01,  1.00000000e+00,  -4.38040559e-01],
#       [-2.68122912e-03, -2.58107940e-03,  9.27219016e-03,     3.94828995e-03,  -2.23638808e-03, 8.12030030e-04,   -2.48586711e-03,  1.73009912e-01,    -4.38040559e-01,  1.00000000e+00]
#])
#
#
#
###HARRSION NEW
##correlation_complete = np.array([
#####      f0              f1                f2               F01               F11               F12               F20              F21                F22              g0                g1               g2
##
##       [ 1.00000000e+00, -6.80339355e-02,  4.13231991e-02, 9.88432649e-01, -7.39763535e-02,  4.99591738e-03, 6.64236812e-02, -4.70168025e-03,  1.28052786e-02, 3.77504051e-02,  1.69128925e-02, -6.12685956e-03],
##       [-6.80339355e-02,  1.00000000e+00, -6.29124144e-01,-5.03383991e-02,  7.24531394e-02,  9.30425234e-03,-4.68294279e-02,  2.63437971e-02,  3.88494914e-02,-1.97133138e-03,  1.39533674e-02, -9.59635060e-03],
##       [ 4.13231991e-02, -6.29124144e-01,  1.00000000e+00, 3.00601133e-02, -9.21373074e-02,  6.38747930e-02,-5.83409371e-02,  8.58852510e-02, -7.34184000e-02,-3.49989915e-04, -1.21470941e-03,  2.50230314e-02],
##       [ 9.88432649e-01, -5.03383991e-02,  3.00601133e-02, 1.00000000e+00, -8.35789972e-02,  1.29930462e-02, 6.68623444e-02, -6.61805833e-03,  1.84281202e-02, 3.77781443e-02,  1.69971962e-02, -6.45397501e-03],
##       [-7.39763535e-02,  7.24531394e-02, -9.21373074e-02,-8.35789972e-02,  1.00000000e+00, -7.23222215e-01, 4.49377713e-01, -1.48721330e-01, -8.21069711e-02, 1.95505356e-03,  1.82532333e-02,  6.99963732e-03],
##       [ 4.99591738e-03,  9.30425234e-03,  6.38747930e-02, 1.29930462e-02, -7.23222215e-01,  1.00000000e+00,-2.46460885e-01,  3.07554392e-01,  2.67052925e-01,-1.27024067e-02, -1.77959219e-02,  3.23740119e-03],
##       [ 6.64236812e-02, -4.68294279e-02, -5.83409371e-02, 6.68623444e-02,  4.49377713e-01, -2.46460885e-01, 1.00000000e+00, -6.34804734e-01,  4.33691443e-01,-9.90303225e-03, -2.42361899e-03,  1.50141801e-02],
##       [-4.70168025e-03,  2.63437971e-02,  8.58852510e-02,-6.61805833e-03, -1.48721330e-01,  3.07554392e-01,-6.34804734e-01,  1.00000000e+00, -7.63735188e-01, 3.08208904e-03,  1.76424927e-03, -2.71812914e-02],
##       [ 1.28052786e-02,  3.88494914e-02, -7.34184000e-02, 1.84281202e-02, -8.21069711e-02,  2.67052925e-01, 4.33691443e-01, -7.63735188e-01,  1.00000000e+00,-8.49312973e-03, -5.95867122e-03,  3.40367050e-02],
##       [ 3.77504051e-02, -1.97133138e-03, -3.49989915e-04, 3.77781443e-02,  1.95505356e-03, -1.27024067e-02,-9.90303225e-03,  3.08208904e-03, -8.49312973e-03, 1.00000000e+00, -5.73763776e-01,  4.15195695e-01],
##       [ 1.69128925e-02,  1.39533674e-02, -1.21470941e-03, 1.69971962e-02,  1.82532333e-02, -1.77959219e-02,-2.42361899e-03,  1.76424927e-03, -5.95867122e-03,-5.73763776e-01,  1.00000000e+00, -7.84185586e-01],
##       [-6.12685956e-03, -9.59635060e-03,  2.50230314e-02,-6.45397501e-03,  6.99963732e-03,  3.23740119e-03, 1.50141801e-02, -2.71812914e-02,  3.40367050e-02, 4.15195695e-01, -7.84185586e-01,  1.00000000e+00]
##
##])
##
##corr = np.array([
#####      f0              f1                f2               F11               F12               F20              F21                 g0                g1               g2
##
##       [ 1.00000000e+00, -6.80339355e-02,  4.13231991e-02, -7.39763535e-02,  4.99591738e-03, 6.64236812e-02, -4.70168025e-03,  3.77504051e-02,  1.69128925e-02, -6.12685956e-03],
##       [-6.80339355e-02,  1.00000000e+00, -6.29124144e-01,  7.24531394e-02,  9.30425234e-03,-4.68294279e-02,  2.63437971e-02, -1.97133138e-03,  1.39533674e-02, -9.59635060e-03],
##       [ 4.13231991e-02, -6.29124144e-01,  1.00000000e+00, -9.21373074e-02,  6.38747930e-02,-5.83409371e-02,  8.58852510e-02, -3.49989915e-04, -1.21470941e-03,  2.50230314e-02],
##       [-7.39763535e-02,  7.24531394e-02, -9.21373074e-02,  1.00000000e+00, -7.23222215e-01, 4.49377713e-01, -1.48721330e-01,  1.95505356e-03,  1.82532333e-02,  6.99963732e-03],
##       [ 4.99591738e-03,  9.30425234e-03,  6.38747930e-02, -7.23222215e-01,  1.00000000e+00,-2.46460885e-01,  3.07554392e-01, -1.27024067e-02, -1.77959219e-02,  3.23740119e-03],
##       [ 6.64236812e-02, -4.68294279e-02, -5.83409371e-02,  4.49377713e-01, -2.46460885e-01, 1.00000000e+00, -6.34804734e-01, -9.90303225e-03, -2.42361899e-03,  1.50141801e-02],
##       [-4.70168025e-03,  2.63437971e-02,  8.58852510e-02, -1.48721330e-01,  3.07554392e-01,-6.34804734e-01,  1.00000000e+00,  3.08208904e-03,  1.76424927e-03, -2.71812914e-02],
##       [ 3.77504051e-02, -1.97133138e-03, -3.49989915e-04,  1.95505356e-03, -1.27024067e-02,-9.90303225e-03,  3.08208904e-03,  1.00000000e+00, -5.73763776e-01,  4.15195695e-01],
##       [ 1.69128925e-02,  1.39533674e-02, -1.21470941e-03,  1.82532333e-02, -1.77959219e-02,-2.42361899e-03,  1.76424927e-03, -5.73763776e-01,  1.00000000e+00, -7.84185586e-01],
##       [-6.12685956e-03, -9.59635060e-03,  2.50230314e-02,  6.99963732e-03,  3.23740119e-03, 1.50141801e-02, -2.71812914e-02,  4.15195695e-01, -7.84185586e-01,  1.00000000e+00]
##
##])
##


#HARRSION NEWEST
correlation_complete = np.array([
###      f0              f1                f2               F01               F11               F12               F20              F21                g0                g1               g2

       [ 1.00000000e+00, -5.77147823e-02,  3.24846208e-02, 9.99987773e-01, -7.73933295e-02,  3.92836725e-03, 6.72025913e-02,  9.45573245e-03,  4.39765850e-02, 1.78777947e-02, -2.70751446e-03],
       [-5.77147823e-02,  1.00000000e+00, -5.71483321e-01,-5.76963757e-02,  7.21217916e-02,  6.53757069e-03,-7.86496757e-02,  9.83621261e-02,  5.90511681e-04, 1.46168124e-02, -2.60619876e-03],
       [ 3.24846208e-02, -5.71483321e-01,  1.00000000e+00, 3.24730571e-02, -9.00689196e-02,  7.94426486e-02,-2.48654397e-02,  3.90425521e-02, -1.01663856e-02, 2.12857003e-02,  9.41224273e-03],
       [ 9.99987773e-01, -5.76963757e-02,  3.24730571e-02, 1.00000000e+00, -7.74035582e-02,  3.93554578e-03, 6.71998135e-02,  9.45985106e-03,  4.39768432e-02, 1.78774326e-02, -2.70769096e-03],
       [-7.73933295e-02,  7.21217916e-02, -9.00689196e-02,-7.74035582e-02,  1.00000000e+00, -7.27520017e-01, 5.39805255e-01, -3.23110017e-01, -2.69285912e-03, 3.57972431e-02,  4.14415059e-03],
       [ 3.92836725e-03,  6.53757069e-03,  7.94426486e-02, 3.93554578e-03, -7.27520017e-01,  1.00000000e+00,-4.16309468e-01,  8.27971662e-01, -8.91708983e-03,-3.10280836e-02, -2.85934802e-03],
       [ 6.72025913e-02, -7.86496757e-02, -2.48654397e-02, 6.71998135e-02,  5.39805255e-01, -4.16309468e-01, 1.00000000e+00, -5.15741895e-01, -7.37126060e-03,-3.51779568e-05, -3.99781025e-05],
       [ 9.45573245e-03,  9.83621261e-02,  3.90425521e-02, 9.45985106e-03, -3.23110017e-01,  8.27971662e-01,-5.15741895e-01,  1.00000000e+00, -5.49931880e-03,-7.11139775e-03, -4.52117991e-04],
       [ 4.39765850e-02,  5.90511681e-04, -1.01663856e-02, 4.39768432e-02, -2.69285912e-03, -8.91708983e-03,-7.37126060e-03, -5.49931880e-03,  1.00000000e+00,-4.63988168e-01,  1.73148316e-01],
       [ 1.78777947e-02,  1.46168124e-02,  2.12857003e-02, 1.78774326e-02,  3.57972431e-02, -3.10280836e-02,-3.51779568e-05, -7.11139775e-03, -4.63988168e-01, 1.00000000e+00, -4.37913015e-01],
       [-2.70751446e-03, -2.60619876e-03,  9.41224273e-03,-2.70769096e-03,  4.14415059e-03, -2.85934802e-03,-3.99781025e-05, -4.52117991e-04,  1.73148316e-01,-4.37913015e-01,  1.00000000e+00]

])

corr = np.array([
###      f0              f1                f2               F11               F12               F20              F21                 g0                g1               g2

       [ 1.00000000e+00, -5.77147823e-02,  3.24846208e-02, -7.73933295e-02,  3.92836725e-03, 6.72025913e-02,  9.45573245e-03,  4.39765850e-02, 1.78777947e-02, -2.70751446e-03],
       [-5.77147823e-02,  1.00000000e+00, -5.71483321e-01,  7.21217916e-02,  6.53757069e-03,-7.86496757e-02,  9.83621261e-02,  5.90511681e-04, 1.46168124e-02, -2.60619876e-03],
       [ 3.24846208e-02, -5.71483321e-01,  1.00000000e+00, -9.00689196e-02,  7.94426486e-02,-2.48654397e-02,  3.90425521e-02, -1.01663856e-02, 2.12857003e-02,  9.41224273e-03],
       [-7.73933295e-02,  7.21217916e-02, -9.00689196e-02,  1.00000000e+00, -7.27520017e-01, 5.39805255e-01, -3.23110017e-01, -2.69285912e-03, 3.57972431e-02,  4.14415059e-03],
       [ 3.92836725e-03,  6.53757069e-03,  7.94426486e-02, -7.27520017e-01,  1.00000000e+00,-4.16309468e-01,  8.27971662e-01, -8.91708983e-03,-3.10280836e-02, -2.85934802e-03],
       [ 6.72025913e-02, -7.86496757e-02, -2.48654397e-02,  5.39805255e-01, -4.16309468e-01, 1.00000000e+00, -5.15741895e-01, -7.37126060e-03,-3.51779568e-05, -3.99781025e-05],
       [ 9.45573245e-03,  9.83621261e-02,  3.90425521e-02, -3.23110017e-01,  8.27971662e-01,-5.15741895e-01,  1.00000000e+00, -5.49931880e-03,-7.11139775e-03, -4.52117991e-04],
       [ 4.39765850e-02,  5.90511681e-04, -1.01663856e-02, -2.69285912e-03, -8.91708983e-03,-7.37126060e-03, -5.49931880e-03,  1.00000000e+00,-4.63988168e-01,  1.73148316e-01],
       [ 1.78777947e-02,  1.46168124e-02,  2.12857003e-02,  3.57972431e-02, -3.10280836e-02,-3.51779568e-05, -7.11139775e-03, -4.63988168e-01, 1.00000000e+00, -4.37913015e-01],
       [-2.70751446e-03, -2.60619876e-03,  9.41224273e-03,  4.14415059e-03, -2.85934802e-03,-3.99781025e-05, -4.52117991e-04,  1.73148316e-01,-4.37913015e-01,  1.00000000e+00]



])


get_ff_variations(names_bgl_coefficients_hammer, bgl_coefficients, bgl_coefficient_uncertainties, corr, "bgl_vector")
